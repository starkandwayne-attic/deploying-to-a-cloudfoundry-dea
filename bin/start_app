#!/usr/bin/env ruby

require "nats/client"
require "json"
require "yaml"
require "fileutils"

app_name = ARGV.shift
app_path = File.expand_path("../../apps/#{app_name}", __FILE__)
unless app_name && File.exists?(app_path)
  puts "Please choose app name from #{Dir['apps/*']}"
  exit 1
end

# dummy demo values
droplet_id = app_name
sha1 = "SHA-#{app_name}"

dea_config = YAML.load_file(File.expand_path("../../config/dea-laptop.yml", __FILE__))
base_dir = dea_config["base_dir"]
staged_dir = File.join(base_dir, "staged")
FileUtils.mkdir_p(staged_dir)

# DEA will look for a cached tgz file first
tgz_file = File.join(staged_dir, "#{sha1}.tgz")
FileUtils.rm_rf tgz_file
`tar -czf #{tgz_file} -C #{app_path} .`
puts "Created #{tgz_file} of #{app_path}"


NATS.start do
  NATS.subscribe('>') { |msg, reply, sub| puts "Msg received on [#{sub}] : '#{msg}'" }

  dea_discover = {
    'runtime' => 'ruby19',
    'runtime_info' => {
      'name' => 'ruby19',
      'executable' => 'ruby',
      'version_flag' => '-v',
      'version_output' => 'ruby 1.9.3'
    },
    'limits' => {
      'mem' => 256
    },
    'droplet' => 'DROPLET_ID_1234'
  }
  NATS.request('dea.discover', dea_discover.to_json) do |response|
    dea = JSON.parse(response)
    dea_uuid = dea['id']
    puts dea_uuid
    
    dea_app_start = {
      droplet: droplet_id,
      index: 0, # first and only running copy
      services: [],
      version: '1-1',
      sha1: sha1,
      executableFile: '???',
      executableUri: "/staged_droplets/#{droplet_id}/#{sha1}",
      name: app_name,
      uris: ["#{app_name}.vcap.me"],
      env: [],
      users: ['drnicwilliams@gmail.com'],
      runtime_info: {
        name: 'ruby19',
        executable: 'ruby',
        version_flag: '-v',
        version_output: 'ruby 1.9.3'
      },
      framework: 'sinatra',
      running: 'ruby19',
      limits: { mem: 256 },
      cc_partition: 'default',
      debug: true
      # console: ???,
      # flapping: ???
    }

    NATS.subscribe("router.register") do |msg|
      # {"dea":"b062bfb498b9a8a8d7a7b015e54148b0","app":"sinatra",
      # "host":"192.168.1.70","port":51690,"uris":["sinatra.vcap.me"],
      # "tags":{"framework":"sinatra","runtime":"ruby19"},
      # "private_instance_id":"04bed915cfa65f986a946853a0aeccd652fd7ae8cf4dbfede9c1ac76145099f6"}
      new_app = JSON.parse(msg)
      host, port = new_app["host"], new_app["port"]
      puts "New app registered at: http://#{host}:#{port}"
      NATS.stop
    end

    NATS.publish("dea.#{dea_uuid}.start", dea_app_start.to_json)
  end
end
